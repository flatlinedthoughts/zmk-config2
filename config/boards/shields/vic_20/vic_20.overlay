#include <dt-bindings/zmk/matrix_transform.h>

// numpad.overlay
/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        col-gpios
    		= <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    	 	, <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 27 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    		, <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
//            = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
  //          , <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    //        , <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      //      , <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        //    , <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
          //  , <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            //, <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
  //          , <&gpio0 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    //        , <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

        row-gpios
		= <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
//            = <&gpio0 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
  //          , <&gpio0 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    //        , <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      //      , <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        //    , <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
          //  , <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            //, <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            //, <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            //, <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <4>;// <9>;
        columns = <12>;//<9>;
        // 0:	Brown/White   = A
        // 1:	Red/White     = B
        // 2:	Orange/White  = C
        // 3:	Yellow/White  = D
        // 4:	Green/White   = E
        // 5:	Blue/White    = F
        // 6:	Purple/White  = G
        // 7:	Gray/White    = H
        // 8:	Brown         = 0
        // 9:	Red           = 1
        // 10:	Orange        = 2
        // 11:	Yellow        = 3
        // 12:	Green         = 4
        // 13:	Blue          = 5
        // 14:	Purple        = 6
        // 15:	Gray          = 7
        // 16:	Black         = 8
        //
        // 17:	White         = I
        // ╔═══╦══════════╦════════╦═══════╦══════════════╦═════════╦══════╦═════════╦══════╦═════════╗
        // ║   ║ 0        ║ 1      ║ 2     ║ 3            ║ 4       ║ 5    ║ 6       ║ 7    ║ 8       ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 0 ║ 1        ║ <-     ║ CTRL  ║ RUN/STOP     ║ SPACE   ║ LOGO ║ Q       ║ 2    ║         ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 1 ║ 3        ║ W      ║ A     ║ L SHIFT      ║ Z       ║ S    ║ E       ║ 4    ║         ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 2 ║ 5        ║ R      ║ D     ║ X            ║ C       ║ F    ║ T       ║ 6    ║         ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 3 ║ 7        ║ Y      ║ G     ║ V            ║ B       ║ H    ║ U       ║ 8    ║         ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 4 ║ 9        ║ I      ║ J     ║ N            ║ M       ║ K    ║ O       ║ 0    ║         ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 5 ║ +        ║ P      ║ L     ║ <            ║ >       ║ :    ║ @       ║ -    ║         ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 6 ║ £        ║ *      ║ ;     ║ ?            ║ H SHIFT ║ =    ║ UPARROW ║ HOME ║         ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 7 ║ DEL/INST ║ RETURN ║ CRSR  ║ CRSR UP/DOWN ║ F1      ║ F3   ║ F5      ║ F7   ║         ║
        // ╠═══╬══════════╬════════╬═══════╬══════════════╬═════════╬══════╬═════════╬══════╬═════════╣
        // ║ 8 ║          ║        ║       ║              ║         ║      ║         ║      ║ Restore ║
        // ╚═══╩══════════╩════════╩═══════╩══════════════╩═════════╩══════╩═════════╩══════╩═════════╝
        // Table generated from: https://www.tablesgenerator.com/text_tables#
//        map = <
  //          RC(0,1) RC(0,0) RC(0,7) RC(1,0) RC(1,7) RC(2,0) RC(2,7) RC(3,0) RC(3,7) RC(4,0) RC(4,7) RC(5,0) RC(5,7) RC(6,0) RC(6,7) RC(7,4)
    //        RC(0,2) RC(0,6) RC(1,1) RC(1,6) RC(2,1) RC(2,6) RC(3,1) RC(3,6) RC(4,1) RC(4,6) RC(5,1) RC(5,6) RC(6,1) RC(6,6) RC(8,8) RC(7,5)
      //      RC(0,3)         RC(1,2) RC(1,5) RC(2,2) RC(2,5) RC(3,2) RC(3,5) RC(4,2) RC(4,5) RC(5,2) RC(5,5) RC(6,2) RC(6,5) RC(7,1) RC(7,6)
        //    RC(0,5) RC(1,3) RC(1,4) RC(2,3) RC(2,4) RC(3,3) RC(3,4) RC(4,3) RC(4,4) RC(5,3) RC(5,4) RC(6,3) RC(6,4) RC(7,3) RC(7,2) RC(7,7)
          //                                                  RC(0,4)
    //    >;
		map = <
			RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
			RC(1,0)     RC(1,1) RC(1,2) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) 
			RC(2,0)		RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
			RC(3,0)	    RC(3,1)     RC(3,3)	 RC(3,4) 	 	 RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
		>;
    };
};
